---
interface Props {
	imgSrc: string
	imgAlt: string
	title: string
	span?: string
	content: string
	theme: 'dark' | 'light'
}
const { imgSrc, imgAlt, title, span, content, theme } = Astro.props
---

<div class={`feature ${theme}`}>
	<div class="image_container">
		<img src={imgSrc} alt={imgAlt} />
	</div>

	<div class="text_container">
		<h2>{title}<span>{span}</span></h2>
		<p>{content}</p>
	</div>
</div>

<style lang="scss">
	@use '@styles/variables/variables.scss' as variables;

	.feature {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 40px;
		padding: variables.$padding-large;
		border-radius: variables.$border-radius;

		&.dark {
			background: variables.$quaternary;
			color: variables.$white;
			box-shadow: none;

			.text_container h2,
			.text_container p {
				color: variables.$white;
			}

			.text_container h2 span {
				color: variables.$primary;
			}
		}

		&.light {
			background: variables.$gray;
			color: variables.$black;

			.text_container h2,
			.text_container p {
				color: variables.$secondary;
			}

			.text_container h2 span {
				color: variables.$quaternary;
			}
		}

		.image_container {
			width: 50%;

			img {
				width: 100%;
			}
			.svg-icon {
				fill: variables.$primary; // Change the color of the SVG
			}
		}

		.text_container {
			width: 80%;
			text-align: center;

			h2 {
				@include variables.typo-h1;
				font-family: variables.$font-family-anton;
			}

			p {
				@include variables.typo-sub1;
			}
		}
	}
</style>
